<%@page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>Smart Pitch System</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
        <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="${pageContext.request.contextPath}/css/home.css">
    </head>
    <body>
        <%@ include file="/includes/header.jsp" %>
        <main>
            <div class="box">
                <div class="bg-home">
                    <img src="./images/bg-home.jpg" alt="background home" class="img-fluid w-100"/>
                </div>
            </div>      

            <div class="container my-5">
                <div class="row text-center">
                    <div class="col-md-4 mb-4">
                        <img src="./images/sub-intro1.png" alt="T√¨m ki·∫øm s√¢n" class="img-fluid mb-2"/>
                        <h3>T√¨m ki·∫øm v·ªã tr√≠ s√¢n</h3>
                        <p>D·ªØ li·ªáu s√¢n ƒë·∫•u d·ªìi d√†o, li√™n t·ª•c c·∫≠p nh·∫≠t, gi√∫p b·∫°n d·ªÖ d√†ng t√¨m ki·∫øm theo khu v·ª±c mong mu·ªën.</p>
                    </div>
                    <div class="col-md-4 mb-4">
                        <img src="./images/sub-intro2.png" alt="ƒê·∫∑t l·ªãch" class="img-fluid mb-2"/>
                        <h3>ƒê·∫∑t l·ªãch online</h3>
                        <p>Kh√¥ng c·∫ßn ƒë·∫øn tr·ª±c ti·∫øp hay g·ªçi ƒëi·ªán, b·∫°n c√≥ th·ªÉ ƒë·∫∑t s√¢n b·∫•t k·ª≥ ƒë√¢u c√≥ internet.</p>
                    </div>
                    <div class="col-md-4 mb-4">
                        <img src="./images/sub-intro3.png" alt="T√¨m ƒë·ªëi" class="img-fluid mb-2"/>
                        <h3>T√¨m ƒë·ªëi, b·∫Øt c·∫∑p ƒë·∫•u</h3>
                        <p>K·∫øt n·ªëi v√† giao l∆∞u v·ªõi c·ªông ƒë·ªìng b√≥ng ƒë√° ƒë·ªÉ x√¢y d·ª±ng nh·ªØng tr·∫≠n c·∫ßu s√¥i ƒë·ªông.</p>
                    </div>
                </div>
            </div>
        </main>
        <%@ include file="/includes/footer.jsp" %>
        <% if (currentUser != null) { %>

        <a href="${pageContext.request.contextPath}/chat.jsp" id="human-chat-link">
            <i class="fas fa-headset"></i>
            <span>Chat v·ªõi nh√¢n vi√™n</span>
        </a>
        <% } else { %>

        <a href="${pageContext.request.contextPath}/account/login.jsp" id="human-chat-link">
            <i class="fas fa-sign-in-alt"></i>
            <span>ƒêƒÉng nh·∫≠p ƒë·ªÉ Chat</span>
        </a>
        <% } %>

        <button id="chat-button">üí¨</button>


        <div id="chat-box">
            <div id="chat-messages"></div>
            <div id="chat-input">
                <input type="text" id="user-message" placeholder="Nh·∫≠p tin nh·∫Øn...">
                <button id="send">G·ª≠i</button>
            </div>
        </div>

        <script>
            const chatButton = document.getElementById("chat-button");
            const chatBox = document.getElementById("chat-box");
            const messages = document.getElementById("chat-messages");
            const input = document.getElementById("user-message");
            const sendBtn = document.getElementById("send");

            let greeted = false;

            chatButton.addEventListener("click", () => {
                const isOpen = chatBox.style.display === "flex";
                chatBox.style.display = isOpen ? "none" : "flex";
                chatBox.style.flexDirection = "column";

                if (!isOpen && !greeted) {
                    const botMsg = document.createElement("div");
                    botMsg.style.textAlign = "left";
                    botMsg.style.margin = "5px";
                    botMsg.innerHTML = "<b>Bot:</b> Xin ch√†o! T√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa SmartPitch. T√¥i c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n t√¨m s√¢n, ƒë·∫∑t s√¢n, h·ªèi gi·ªù tr·ªëng ho·∫∑c c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?";
                    messages.appendChild(botMsg);
                    messages.scrollTop = messages.scrollHeight;
                    greeted = true;
                }
            });

            input.addEventListener("keyup", e => {
                if (e.key === "Enter")
                    sendBtn.click();
            });

            sendBtn.addEventListener("click", async () => {
                const message = input.value.trim();
                if (!message)
                    return;


                const userMsg = document.createElement("div");
                userMsg.style.textAlign = "right";
                userMsg.style.margin = "5px";
                userMsg.innerHTML = "<b>B·∫°n:</b> " + escapeHtml(message);
                messages.appendChild(userMsg);
                messages.scrollTop = messages.scrollHeight;

                input.value = "";

                try {
                    const res = await fetch("ChatBotServlet", {
                        method: "POST",
                        headers: {"Content-Type": "application/x-www-form-urlencoded"},
                        body: "message=" + encodeURIComponent(message)
                    });
                    const data = await res.json();

                    const botMsg = document.createElement("div");
                    botMsg.style.textAlign = "left";
                    botMsg.style.margin = "5px";
                    botMsg.innerHTML = "<b>Bot:</b> " + escapeHtml(data.reply);
                    messages.appendChild(botMsg);
                    messages.scrollTop = messages.scrollHeight;

                } catch (e) {
                    const botMsg = document.createElement("div");
                    botMsg.style.textAlign = "left";
                    botMsg.style.margin = "5px";
                    botMsg.innerHTML = "<b>Bot:</b> L·ªói k·∫øt n·ªëi.";
                    messages.appendChild(botMsg);
                    messages.scrollTop = messages.scrollHeight;
                }
            });

            function escapeHtml(text) {
                const div = document.createElement("div");
                div.textContent = text;
                return div.innerHTML;
            }

            document.addEventListener('DOMContentLoaded', function() {
                const userDropdown = document.querySelector('.user-dropdown');
                const dropdownMenu = document.querySelector('.dropdown-menu');

                if (userDropdown) {
                    userDropdown.addEventListener('click', function(e) {
                        e.stopPropagation();
                        dropdownMenu.classList.toggle('show');
                    });

                    document.addEventListener('click', function(e) {
                        if (!userDropdown.contains(e.target)) {
                            dropdownMenu.classList.remove('show');
                        }
                    });
                }
            });
        </script>
    </body>
</html>
