<%-- 
    Document   : home
    Created on : May 15, 2025
    Author     : ADMIN
--%>

<%@page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>Smart Pitch System</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
        <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="./css/home.css"/>

        <style>
            #chat-button {
                position: fixed;
                bottom: 20px;
                right: 20px;
                width: 60px;
                height: 60px;
                border-radius: 50%;
                background: linear-gradient(135deg, #007bff, #00c6ff);
                color: #fff;
                border: none;
                font-size: 28px;
                cursor: pointer;
                z-index: 1000;
                box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
                display: flex;
                align-items: center;
                justify-content: center;
                transition: background 0.3s ease;
            }

            #chat-button:hover {
                background: linear-gradient(135deg, #0056b3, #0096c7);
            }

            #chat-box {
                position: fixed;
                bottom: 90px;
                right: 20px;
                width: 360px;
                height: 500px;
                background-color: #fff;
                border-radius: 16px;
                display: none;
                flex-direction: column;
                z-index: 1000;
                box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
                overflow: hidden;
                font-family: 'Roboto', sans-serif;
            }

            #chat-messages {
                flex: 1;
                padding: 15px;
                overflow-y: auto;
                background: #f9f9f9;
                font-size: 14px;
            }

            .user-message, .bot-message {
                max-width: 80%;
                padding: 10px 14px;
                border-radius: 18px;
                margin-bottom: 8px;
                line-height: 1.4;
                word-wrap: break-word;
            }

            .user-message {
                background: #dcf8c6;
                align-self: flex-end;
                margin-left: auto;
                text-align: right;
            }

            .bot-message {
                background: #e2e3e5;
                align-self: flex-start;
                margin-right: auto;
                text-align: left;
            }

            #chat-input {
                display: flex;
                border-top: 1px solid #ddd;
                background: #fff;
                padding: 8px;
            }

            #chat-input input {
                flex: 1;
                border: 1px solid #ccc;
                border-radius: 20px;
                padding: 8px 14px;
                outline: none;
                font-size: 14px;
            }

            #chat-input button {
                background: #007bff;
                color: white;
                border: none;
                border-radius: 20px;
                padding: 8px 16px;
                margin-left: 8px;
                cursor: pointer;
                transition: background 0.3s ease;
            }

            #chat-input button:hover {
                background: #0056b3;
            }
            /* === CSS M·ªöI CHO N√öT CHAT V·ªöI NH√ÇN VI√äN === */
            #human-chat-link {
                position: fixed;
                bottom: 95px; /* ƒê·∫∑t ngay tr√™n n√∫t chatbot c≈© */
                right: 20px;
                background: linear-gradient(135deg, #28a745, #28b485); /* M√†u xanh l√° c√¢y ƒë·ªÉ ph√¢n bi·ªát */
                color: #fff;
                padding: 12px 18px;
                border-radius: 25px;
                text-decoration: none;
                font-weight: bold;
                font-size: 14px;
                z-index: 1000;
                box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
            }

            #human-chat-link:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.35);
            }

            #human-chat-link i {
                margin-right: 8px; /* Th√™m kho·∫£ng c√°ch cho icon */
            }
        </style>
    </head>
    <body>
        <%@ include file="/includes/header.jsp" %>
        <main>
            <div class="box">
                <div class="bg-home">
                    <img src="./images/bg-home.jpg" alt="background home" class="img-fluid w-100"/>
                </div>
            </div>      

            <div class="container my-5">
                <div class="row text-center">
                    <div class="col-md-4 mb-4">
                        <img src="./images/sub-intro1.png" alt="T√¨m ki·∫øm s√¢n" class="img-fluid mb-2"/>
                        <h3>T√¨m ki·∫øm v·ªã tr√≠ s√¢n</h3>
                        <p>D·ªØ li·ªáu s√¢n ƒë·∫•u d·ªìi d√†o, li√™n t·ª•c c·∫≠p nh·∫≠t, gi√∫p b·∫°n d·ªÖ d√†ng t√¨m ki·∫øm theo khu v·ª±c mong mu·ªën.</p>
                    </div>
                    <div class="col-md-4 mb-4">
                        <img src="./images/sub-intro2.png" alt="ƒê·∫∑t l·ªãch" class="img-fluid mb-2"/>
                        <h3>ƒê·∫∑t l·ªãch online</h3>
                        <p>Kh√¥ng c·∫ßn ƒë·∫øn tr·ª±c ti·∫øp hay g·ªçi ƒëi·ªán, b·∫°n c√≥ th·ªÉ ƒë·∫∑t s√¢n b·∫•t k·ª≥ ƒë√¢u c√≥ internet.</p>
                    </div>
                    <div class="col-md-4 mb-4">
                        <img src="./images/sub-intro3.png" alt="T√¨m ƒë·ªëi" class="img-fluid mb-2"/>
                        <h3>T√¨m ƒë·ªëi, b·∫Øt c·∫∑p ƒë·∫•u</h3>
                        <p>K·∫øt n·ªëi v√† giao l∆∞u v·ªõi c·ªông ƒë·ªìng b√≥ng ƒë√° ƒë·ªÉ x√¢y d·ª±ng nh·ªØng tr·∫≠n c·∫ßu s√¥i ƒë·ªông.</p>
                    </div>
                </div>
            </div>
        </main>
        <%@ include file="/includes/footer.jsp" %>
        <% if (currentUser != null) { %>
        <%-- N·∫øu ƒë√£ ƒëƒÉng nh·∫≠p, d·∫´n ƒë·∫øn trang chat.jsp --%>
        <a href="${pageContext.request.contextPath}/chat.jsp" id="human-chat-link">
            <i class="fas fa-headset"></i>
            <span>Chat v·ªõi nh√¢n vi√™n</span>
        </a>
        <% } else { %>
        <%-- N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, d·∫´n ƒë·∫øn trang login.jsp --%>
        <a href="${pageContext.request.contextPath}/account/login.jsp" id="human-chat-link">
            <i class="fas fa-sign-in-alt"></i>
            <span>ƒêƒÉng nh·∫≠p ƒë·ªÉ Chat</span>
        </a>
        <% } %>
        <!-- Chatbot button -->
        <button id="chat-button">üí¨</button>

        <!-- Chatbot box -->
        <div id="chat-box">
            <div id="chat-messages"></div>
            <div id="chat-input">
                <input type="text" id="user-message" placeholder="Nh·∫≠p tin nh·∫Øn...">
                <button id="send">G·ª≠i</button>
            </div>
        </div>

        <script>
            const chatButton = document.getElementById("chat-button");
            const chatBox = document.getElementById("chat-box");
            const messages = document.getElementById("chat-messages");
            const input = document.getElementById("user-message");
            const sendBtn = document.getElementById("send");

            let greeted = false;

            chatButton.addEventListener("click", () => {
                const isOpen = chatBox.style.display === "flex";
                chatBox.style.display = isOpen ? "none" : "flex";
                chatBox.style.flexDirection = "column";

                if (!isOpen && !greeted) {
                    const botMsg = document.createElement("div");
                    botMsg.style.textAlign = "left";
                    botMsg.style.margin = "5px";
                    botMsg.innerHTML = "<b>Bot:</b> Xin ch√†o! T√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa SmartPitch. T√¥i c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n t√¨m s√¢n, ƒë·∫∑t s√¢n, h·ªèi gi·ªù tr·ªëng ho·∫∑c c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?";
                    messages.appendChild(botMsg);
                    messages.scrollTop = messages.scrollHeight;
                    greeted = true;
                }
            });

            input.addEventListener("keyup", e => {
                if (e.key === "Enter")
                    sendBtn.click();
            });

            sendBtn.addEventListener("click", async () => {
                const message = input.value.trim();
                if (!message)
                    return;

                // th√™m tin nh·∫Øn ng∆∞·ªùi d√πng
                const userMsg = document.createElement("div");
                userMsg.style.textAlign = "right";
                userMsg.style.margin = "5px";
                userMsg.innerHTML = "<b>B·∫°n:</b> " + escapeHtml(message);
                messages.appendChild(userMsg);
                messages.scrollTop = messages.scrollHeight;

                input.value = "";

                try {
                    const res = await fetch("ChatBotServlet", {
                        method: "POST",
                        headers: {"Content-Type": "application/x-www-form-urlencoded"},
                        body: "message=" + encodeURIComponent(message)
                    });
                    const data = await res.json();

                    const botMsg = document.createElement("div");
                    botMsg.style.textAlign = "left";
                    botMsg.style.margin = "5px";
                    botMsg.innerHTML = "<b>Bot:</b> " + escapeHtml(data.reply);
                    messages.appendChild(botMsg);
                    messages.scrollTop = messages.scrollHeight;

                } catch (e) {
                    const botMsg = document.createElement("div");
                    botMsg.style.textAlign = "left";
                    botMsg.style.margin = "5px";
                    botMsg.innerHTML = "<b>Bot:</b> L·ªói k·∫øt n·ªëi.";
                    messages.appendChild(botMsg);
                    messages.scrollTop = messages.scrollHeight;
                }
            });

            function escapeHtml(text) {
                const div = document.createElement("div");
                div.textContent = text;
                return div.innerHTML;
            }

        </script>
    </body>
</html>
